<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="5.0" jmeter="5.2.1">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="Test Plan" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.tearDown_on_shutdown">true</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables (DEV)" enabled="false">
        <collectionProp name="Arguments.arguments">
          <elementProp name="SERVICE_HOST" elementType="Argument">
            <stringProp name="Argument.name">SERVICE_HOST</stringProp>
            <stringProp name="Argument.value">localhost</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="SERVICE_PORT" elementType="Argument">
            <stringProp name="Argument.name">SERVICE_PORT</stringProp>
            <stringProp name="Argument.value">8082</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </Arguments>
      <hashTree/>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables (DOCKER)" enabled="true">
        <collectionProp name="Arguments.arguments">
          <elementProp name="SERVICE_HOST" elementType="Argument">
            <stringProp name="Argument.name">SERVICE_HOST</stringProp>
            <stringProp name="Argument.value">localhost</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="SERVICE_PORT" elementType="Argument">
            <stringProp name="Argument.name">SERVICE_PORT</stringProp>
            <stringProp name="Argument.value">50001</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </Arguments>
      <hashTree/>
      <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP Request Defaults" enabled="true">
        <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
          <collectionProp name="Arguments.arguments"/>
        </elementProp>
        <stringProp name="HTTPSampler.domain">${SERVICE_HOST}</stringProp>
        <stringProp name="HTTPSampler.port">${SERVICE_PORT}</stringProp>
        <stringProp name="HTTPSampler.protocol"></stringProp>
        <stringProp name="HTTPSampler.contentEncoding"></stringProp>
        <stringProp name="HTTPSampler.path"></stringProp>
        <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
        <stringProp name="HTTPSampler.connect_timeout"></stringProp>
        <stringProp name="HTTPSampler.response_timeout"></stringProp>
      </ConfigTestElement>
      <hashTree/>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Thread Group" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <intProp name="LoopController.loops">-1</intProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">10</stringProp>
        <stringProp name="ThreadGroup.ramp_time">0</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="empty resource" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/resources/${__UUID}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="update resource" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{ &quot;customValue&quot;: &quot;${CUSTOM_VALUE}&quot;,&#xd;
	&quot;web-app&quot;: {&#xd;
  &quot;servlet&quot;: [   &#xd;
    {&#xd;
      &quot;servlet-name&quot;: &quot;cofaxCDS&quot;,&#xd;
      &quot;servlet-class&quot;: &quot;org.cofax.cds.CDSServlet&quot;,&#xd;
      &quot;init-param&quot;: {&#xd;
        &quot;configGlossary:installationAt&quot;: &quot;Philadelphia, PA&quot;,&#xd;
        &quot;configGlossary:adminEmail&quot;: &quot;ksm@pobox.com&quot;,&#xd;
        &quot;configGlossary:poweredBy&quot;: &quot;Cofax&quot;,&#xd;
        &quot;configGlossary:poweredByIcon&quot;: &quot;/images/cofax.gif&quot;,&#xd;
        &quot;configGlossary:staticPath&quot;: &quot;/content/static&quot;,&#xd;
        &quot;templateProcessorClass&quot;: &quot;org.cofax.WysiwygTemplate&quot;,&#xd;
        &quot;templateLoaderClass&quot;: &quot;org.cofax.FilesTemplateLoader&quot;,&#xd;
        &quot;templatePath&quot;: &quot;templates&quot;,&#xd;
        &quot;templateOverridePath&quot;: &quot;&quot;,&#xd;
        &quot;defaultListTemplate&quot;: &quot;listTemplate.htm&quot;,&#xd;
        &quot;defaultFileTemplate&quot;: &quot;articleTemplate.htm&quot;,&#xd;
        &quot;useJSP&quot;: false,&#xd;
        &quot;jspListTemplate&quot;: &quot;listTemplate.jsp&quot;,&#xd;
        &quot;jspFileTemplate&quot;: &quot;articleTemplate.jsp&quot;,&#xd;
        &quot;cachePackageTagsTrack&quot;: 200,&#xd;
        &quot;cachePackageTagsStore&quot;: 200,&#xd;
        &quot;cachePackageTagsRefresh&quot;: 60,&#xd;
        &quot;cacheTemplatesTrack&quot;: 100,&#xd;
        &quot;cacheTemplatesStore&quot;: 50,&#xd;
        &quot;cacheTemplatesRefresh&quot;: 15,&#xd;
        &quot;cachePagesTrack&quot;: 200,&#xd;
        &quot;cachePagesStore&quot;: 100,&#xd;
        &quot;cachePagesRefresh&quot;: 10,&#xd;
        &quot;cachePagesDirtyRead&quot;: 10,&#xd;
        &quot;searchEngineListTemplate&quot;: &quot;forSearchEnginesList.htm&quot;,&#xd;
        &quot;searchEngineFileTemplate&quot;: &quot;forSearchEngines.htm&quot;,&#xd;
        &quot;searchEngineRobotsDb&quot;: &quot;WEB-INF/robots.db&quot;,&#xd;
        &quot;useDataStore&quot;: true,&#xd;
        &quot;dataStoreClass&quot;: &quot;org.cofax.SqlDataStore&quot;,&#xd;
        &quot;redirectionClass&quot;: &quot;org.cofax.SqlRedirection&quot;,&#xd;
        &quot;dataStoreName&quot;: &quot;cofax&quot;,&#xd;
        &quot;dataStoreDriver&quot;: &quot;com.microsoft.jdbc.sqlserver.SQLServerDriver&quot;,&#xd;
        &quot;dataStoreUrl&quot;: &quot;jdbc:microsoft:sqlserver://LOCALHOST:1433;DatabaseName=goon&quot;,&#xd;
        &quot;dataStoreUser&quot;: &quot;sa&quot;,&#xd;
        &quot;dataStorePassword&quot;: &quot;dataStoreTestQuery&quot;,&#xd;
        &quot;dataStoreTestQuery&quot;: &quot;SET NOCOUNT ON;select test=&apos;test&apos;;&quot;,&#xd;
        &quot;dataStoreLogFile&quot;: &quot;/usr/local/tomcat/logs/datastore.log&quot;,&#xd;
        &quot;dataStoreInitConns&quot;: 10,&#xd;
        &quot;dataStoreMaxConns&quot;: 100,&#xd;
        &quot;dataStoreConnUsageLimit&quot;: 100,&#xd;
        &quot;dataStoreLogLevel&quot;: &quot;debug&quot;,&#xd;
        &quot;maxUrlLength&quot;: 500}},&#xd;
    {&#xd;
      &quot;servlet-name&quot;: &quot;cofaxEmail&quot;,&#xd;
      &quot;servlet-class&quot;: &quot;org.cofax.cds.EmailServlet&quot;,&#xd;
      &quot;init-param&quot;: {&#xd;
      &quot;mailHost&quot;: &quot;mail1&quot;,&#xd;
      &quot;mailHostOverride&quot;: &quot;mail2&quot;}},&#xd;
    {&#xd;
      &quot;servlet-name&quot;: &quot;cofaxAdmin&quot;,&#xd;
      &quot;servlet-class&quot;: &quot;org.cofax.cds.AdminServlet&quot;},&#xd;
 &#xd;
    {&#xd;
      &quot;servlet-name&quot;: &quot;fileServlet&quot;,&#xd;
      &quot;servlet-class&quot;: &quot;org.cofax.cds.FileServlet&quot;},&#xd;
    {&#xd;
      &quot;servlet-name&quot;: &quot;cofaxTools&quot;,&#xd;
      &quot;servlet-class&quot;: &quot;org.cofax.cms.CofaxToolsServlet&quot;,&#xd;
      &quot;init-param&quot;: {&#xd;
        &quot;templatePath&quot;: &quot;toolstemplates/&quot;,&#xd;
        &quot;log&quot;: 1,&#xd;
        &quot;logLocation&quot;: &quot;/usr/local/tomcat/logs/CofaxTools.log&quot;,&#xd;
        &quot;logMaxSize&quot;: &quot;&quot;,&#xd;
        &quot;dataLog&quot;: 1,&#xd;
        &quot;dataLogLocation&quot;: &quot;/usr/local/tomcat/logs/dataLog.log&quot;,&#xd;
        &quot;dataLogMaxSize&quot;: &quot;&quot;,&#xd;
        &quot;removePageCache&quot;: &quot;/content/admin/remove?cache=pages&amp;id=&quot;,&#xd;
        &quot;removeTemplateCache&quot;: &quot;/content/admin/remove?cache=templates&amp;id=&quot;,&#xd;
        &quot;fileTransferFolder&quot;: &quot;/usr/local/tomcat/webapps/content/fileTransferFolder&quot;,&#xd;
        &quot;lookInContext&quot;: 1,&#xd;
        &quot;adminGroupID&quot;: 4,&#xd;
        &quot;betaServer&quot;: true}}],&#xd;
  &quot;servlet-mapping&quot;: {&#xd;
    &quot;cofaxCDS&quot;: &quot;/&quot;,&#xd;
    &quot;cofaxEmail&quot;: &quot;/cofaxutil/aemail/*&quot;,&#xd;
    &quot;cofaxAdmin&quot;: &quot;/admin/*&quot;,&#xd;
    &quot;fileServlet&quot;: &quot;/static/*&quot;,&#xd;
    &quot;cofaxTools&quot;: &quot;/tools/*&quot;},&#xd;
 &#xd;
  &quot;taglib&quot;: {&#xd;
    &quot;taglib-uri&quot;: &quot;cofax.tld&quot;,&#xd;
    &quot;taglib-location&quot;: &quot;/WEB-INF/tlds/cofax.tld&quot;}}}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/resources/jmeter/${__threadNum}</stringProp>
          <stringProp name="HTTPSampler.method">PUT</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <JSR223PreProcessor guiclass="TestBeanGUI" testclass="JSR223PreProcessor" testname="JSR223 PreProcessor" enabled="true">
            <stringProp name="cacheKey">true</stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="script">vars.put(&apos;CUSTOM_VALUE&apos;, UUID.randomUUID().toString())</stringProp>
            <stringProp name="scriptLanguage">groovy</stringProp>
          </JSR223PreProcessor>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion" enabled="true">
            <stringProp name="JSON_PATH">$.customValue</stringProp>
            <stringProp name="EXPECTED_VALUE">${CUSTOM_VALUE}</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="find resource" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/resources/jmeter/${__threadNum}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion" enabled="true">
            <stringProp name="JSON_PATH">$.customValue</stringProp>
            <stringProp name="EXPECTED_VALUE">${CUSTOM_VALUE}</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="health" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/internal/health</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion" enabled="true">
            <stringProp name="JSON_PATH">$.status</stringProp>
            <stringProp name="EXPECTED_VALUE">UP</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
        </hashTree>
        <GaussianRandomTimer guiclass="GaussianRandomTimerGui" testclass="GaussianRandomTimer" testname="Gaussian Random Timer" enabled="true">
          <stringProp name="ConstantTimer.delay">200</stringProp>
          <stringProp name="RandomTimer.range">50.0</stringProp>
        </GaussianRandomTimer>
        <hashTree/>
      </hashTree>
      <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
        <boolProp name="ResultCollector.error_logging">true</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <url>true</url>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
      <ResultCollector guiclass="StatVisualizer" testclass="ResultCollector" testname="Aggregate Report" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <url>true</url>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
      <ResultCollector guiclass="SummaryReport" testclass="ResultCollector" testname="Summary Report" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <url>true</url>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
